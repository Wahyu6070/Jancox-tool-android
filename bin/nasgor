####################################
#       Nasgor Mini Installer      #
####################################
#          By : wahyu6070          #
####################################
#
#  Support android & Linux
#


#  DIR SET
nasgor=$MODPATH/bin
lib=$nasgor/lib
xbin2=$nasgor/xbin
etc=.$nasgor/etc
files=$nasgor/files
#
#########################################################################
arch=$(uname -m | cut -c-3)
if [ $arch = x86 ]; then
   xbin=$nasgor/xbin/x86
else
   xbin=$nasgor/xbin/arm
fi

#
###########################################################################
#nasgor dir
case $(uname -o) in
Android)  case $0 in
		   *.sh) home="$0";;
	 	   *) home="$(lsof -p $$ 2>/dev/null | grep -o '/.*.sh$')";;
		  esac;
		  home="$(dirname "$(readlink -f "$home")")";
;;
*)
#home="${BASH_SOURCE:-$0}";
home="$(dirname "$(readlink -f "$home")")";
;;
esac


#########################
# Functions
#########################
# (dont change)


print (){
	echo "$1"
	}

printlog (){
	if [ ! $log ]; then
	echo " <please add log=/folder>"
	fi
	echo "$1" | tee -a $log
}

#internet connection
#by wahyu6070
internet () {
wget -q --spider http://google.com

if [ $? -eq 0 ]; then
    echo "online"
else
    echo "offline"
fi
#-q : Silence mode
# --spider : don't get, just check page availability
# $? : shell return code
# 0 : shell "All OK" code
}

#find_prop
#by wahyu6070
grep_profile (){
	if [ $1 ]; then
	   if [ -f $profile ]; then
	     grep "$1" "$profile" | cut -d "=" -f 2
	   else
	   echo "please declare <profile=(folder place)>"
	   fi
	else
	 echo "usage : grep_profile <text>"
	 echo "read nasgor dokumentation"
	fi
}

grep_prop() {
  local REGEX="s/^$1=//p"
  shift
  local FILES=$@
  [ -z "$FILES" ] && FILES='/system/build.prop'
  sed -n "$REGEX" $FILES 2>/dev/null | head -n 1
}

getp (){
	grep_prop $1 $profile | cut -d "=" -f "2"
	}
	
	
get_prop (){
	grep $1 $2 | cut -d "=" -f "2"
	}

#null
#by wahyu6070
nul (){
	2>/dev/null /dev/null
	}
	
	
#https://github.com/fearside/SimpleProgressSpinner
# Spinner <message>
Spinner() {

# Choose which character to show.
case ${_indicator} in
  "|") _indicator="/";;
  "/") _indicator="-";;
  "-") _indicator="\\";;
  "\\") _indicator="|";;
  # Initiate spinner character
  *) _indicator="\\";;
esac

# Print simple progress spinner
printf "\r${@} [${_indicator}]"
}


	
# chmod file
# by wahyu6070
chmodf (){
	if [ -d /sdcard ]; then
		if [ -f $1 ]; then
		chwon 0:2000 $1
		chmod 777 $1
		else
			echo "please using <chmodf> file only"
		fi
	else
		if [ -f $1 ]; then
		sudo chwon 0:2000 $1
		sudo chmod 777 $1
		else
			echo "please using <chmodf> file only"
		fi
	fi	
	}
# chmod directory
# by wahyu6070
chmodr (){
	if [ -d /sdcard ]; then
		if [ -d $1 ]; then
		chown -R 0:2000 $1
		chmod -R 777 $1
		else
			echo "please using <chmodr> directory only"
		fi
	else	
		if [ -d $1 ]; then
		sudo chown -R 0:2000 $1
		sudo chmod -R 777 $1
		else
			echo "please using <chmodr> directory only"
		fi
	fi	
	}	
# rm 
# by wahyu6070
del (){
	rm -rf "$1"
}

setime() {
	if [[ $1 == '-f' ]] && [ -f $2 ] && [ -eq $3 ]; then
	touch -ct $3 "$1"
	elif [[ $1 == "-r" ]] && [ $2 ] && [ $3 ]; then
		if [ -d $2 ]; then
			find $2 -print | while read filename; do
   		 touch -ct $3 "$filename"
  		  done
  	  fi
    elif [[ $1 == '--help' ]]; then
    echo "usage : setime <options> <input> <datetime>"
    echo " "
    echo "example : setime -r /sdcard/download 202004081503"
    echo " "
    echo "options"
    echo "-f (file)"
    echo "-r  (change all directory and file)"
    echo " "
    echo "setime v1.0 author by wahyu6070"
    echo "since 2020-04-09"
    else
    echo "usage : setime --help"
    fi
    
}


# Check A/B slot
if [ -d /system_root ]; then
  isABDevice=true
  SYSTEM=/system_root/system
  SYSTEM2=/system
  CACHELOC=/data/cache
else
  isABDevice=false
  SYSTEM=/system
  SYSTEM2=/system
  CACHELOC=/cache
fi
[ -z "$isABDevice" ] && { echo "Something went wrong!"; exit 1; }

#=========================== Set Busybox up

set_perm() {
  chown $2:$3 $1 || return 1
  chmod $4 $1 || return 1
  (if [ -z $5 ]; then
    case $1 in
      *"system/vendor/app/"*) chcon 'u:object_r:vendor_app_file:s0' $1;;
      *"system/vendor/etc/"*) chcon 'u:object_r:vendor_configs_file:s0' $1;;
      *"system/vendor/overlay/"*) chcon 'u:object_r:vendor_overlay_file:s0' $1;;
      *"system/vendor/"*) chcon 'u:object_r:vendor_file:s0' $1;;
      *) chcon 'u:object_r:system_file:s0' $1;;
    esac
  else
    chcon $5 $1
  fi) || return 1
}


# Set perm recursive
set_perm_recursive() {
  find $1 -type d 2>/dev/null | while read dir; do
    set_perm $dir $2 $3 $4 $6
  done
  find $1 -type f -o -type l 2>/dev/null | while read file; do
    set_perm $file $2 $3 $5 $6
  done
}

# Mktouch
mktouch() {
  mkdir -p ${1%/*} 2>/dev/null
  [ -z $2 ] && touch $1 || echo $2 > $1
  chmod 644 $1
}

# Grep prop
grep_prop() {
  local REGEX="s/^$1=//p"
  shift
  local FILES=$@
  [ -z "$FILES" ] && FILES='/system/build.prop'
  sed -n "$REGEX" $FILES 2>/dev/null | head -n 1
}

ANDROIDVERSION=$(grep ro.build.version.release /system/build.prop | cut -d = -f 2)
ANDROIDMODEL=$(grep ro.product.vendor.model /vendor/build.prop | cut -d = -f 2)
ANDROIDDEVICE=$(grep ro.product.vendor.device /vendor/build.prop | cut -d = -f 2)
ANDROIDROM=$(grep ro.build.display.id /system/build.prop | cut -d = -f 2 | cut -d'-' -f1)

API=`grep_prop ro.build.version.sdk /system/build.prop`
ABI=`grep_prop ro.product.cpu.abi /system/build.prop| cut -c-3`
ABI2=`grep_prop ro.product.cpu.abi2 /system/build.prop | cut -c-3`
ABILONG=`grep_prop ro.product.cpu.abi /system/build.prop`
ARCH=arm
ARCH32=arm
IS64BIT=false
if [ "$ABI" = "x86" ]; then ARCH=x86; ARCH32=x86; fi;
if [ "$ABI2" = "x86" ]; then ARCH=x86; ARCH32=x86; fi;
if [ "$ABILONG" = "arm64-v8a" ]; then ARCH=arm64; ARCH32=arm; IS64BIT=true; fi;
if [ "$ABILONG" = "x86_64" ]; then ARCH=x64; ARCH32=x86; IS64BIT=true; fi;

#############################
#     Color
#############################
# Bash Colors
# by veez21 @ xda-developers

G='\e[01;32m'		# GREEN TEXT
R='\e[01;31m'		# RED TEXT
Y='\e[01;33m'		# YELLOW TEXT
B='\e[01;34m'		# BLUE TEXT
V='\e[01;35m'		# VIOLET TEXT
Bl='\e[01;30m'		# BLACK TEXT
C='\e[01;36m'		# CYAN TEXT
W='\e[01;37m'		# WHITE TEXT
BGBL='\e[1;30;47m'	# Background W Text Bl
N='\e[0m'			# How to use (example): echo "${G}example${N}"
loadBar=' '			# Load UI
# Remove color codes if -nc or in ADB Shell
[ -n "$1" -a "$1" == "-nc" ] && shift && NC=true
[ "$NC" -o -n "$LOGNAME" ] && {
	G=''; R=''; Y=''; B=''; V=''; Bl=''; C=''; W=''; N=''; BGBL=''; loadBar='=';
}
#

case $1 in
setime) setime
;;
grep_prop) grep_prop ;;
esac
####################################
# declaration
####################################
group=$(uname -n)
kernel=$(uname -r)
kernelversion=$(uname -v)
nul=$(2>/dev/null /dev/null)
#internet=$(ping -q -w 1 -c 1 google.com > /dev/null 2>/dev/null && echo online || echo offline)

ANDROIDVERSION=$(grep ro.build.version.release /system/build.prop | cut -d = -f 2)
ANDROIDMODEL=$(grep ro.product.vendor.model /vendor/build.prop | cut -d = -f 2)
ANDROIDDEVICE=$(grep ro.product.vendor.device /vendor/build.prop | cut -d = -f 2)
ANDROIDROM=$(grep ro.build.display.id /system/build.prop | cut -d = -f 2 | cut -d'-' -f1)
MODULEVERSION=`grep_prop version $TMPDIR/module.prop | cut -d "=" -f 2`
MODULECODE=`grep_prop versionCode $TMPDIR/module.prop | cut -d "=" -f 2`
MODULENAME=`grep_prop name $TMPDIR/module.prop | cut -d "=" -f 2`
MODULEANDROID=`grep_prop android $TMPDIR/module.prop | cut -d "=" -f 2`
MODULEDATE=`grep_prop date $TMPDIR/module.prop | cut -d "=" -f 2`
MODULEAUTHOR=`grep_prop author $TMPDIR/module.prop | cut -d "=" -f 2`
